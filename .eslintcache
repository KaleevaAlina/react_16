[{"D:\\IT_SHATLE\\Course_react\\02-02-2021\\src\\index.js":"1","D:\\IT_SHATLE\\Course_react\\02-02-2021\\src\\App.js":"2","D:\\IT_SHATLE\\Course_react\\02-02-2021\\src\\default module\\components\\UserForm.js":"3","D:\\IT_SHATLE\\Course_react\\02-02-2021\\src\\default module\\containers\\DopContainer.js":"4","D:\\IT_SHATLE\\Course_react\\02-02-2021\\src\\default module\\components\\DopComponent.js":"5"},{"size":277,"mtime":1612281284988,"results":"6","hashOfConfig":"7"},{"size":157,"mtime":1612281505670,"results":"8","hashOfConfig":"7"},{"size":4488,"mtime":1612351218221,"results":"9","hashOfConfig":"7"},{"size":1088,"mtime":1612282112648,"results":"10","hashOfConfig":"7"},{"size":1283,"mtime":1612270488933,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"18s7jaf",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"D:\\IT_SHATLE\\Course_react\\02-02-2021\\src\\index.js",[],["24","25"],"D:\\IT_SHATLE\\Course_react\\02-02-2021\\src\\App.js",[],"D:\\IT_SHATLE\\Course_react\\02-02-2021\\src\\default module\\components\\UserForm.js",[],"D:\\IT_SHATLE\\Course_react\\02-02-2021\\src\\default module\\containers\\DopContainer.js",[],"D:\\IT_SHATLE\\Course_react\\02-02-2021\\src\\default module\\components\\DopComponent.js",["26"],"import logo from '../../logo.svg';\nimport '../../App.css';\nimport { Button } from '@material-ui/core';\nimport  React , {useState,   useEffect} from 'react';\n\n\n\nconst DopComponent = ({helloText,incrementClick,count,  incrementClickTwo}) => {\n  const [data,setData] = useState(0);\n  useEffect (() => {\n    document.title=`${data}`\n  });\n  return (\n    \n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          {helloText}\n        </p>\n      <p>\n        Сумма     {data}\n      </p>\n        <a\n          className=\"App-link\"\n\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a> \n        <div className=\"but\">\n         <Button variant=\"outlined\" color=\"secondary\" onClick = {incrementClick}>PLUS </Button>\n         <Button variant=\"outlined\" color=\"secondary\" onClick = {incrementClickTwo}>Minus</Button> \n        </div>\n        <div className=\"but1\">\n          {count}\n        </div>\n        <div className=\"but\">\n         <Button onClick = {()=>setData(data+4)}>Click </Button>\n        </div>\n        <div className=\"but1\">\n          {data}\n        </div>\n\n      </header>\n    <div>\n    \n</div>\n</div>\n  );\n}\n\nexport default DopComponent;",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":24,"column":9,"nodeType":"33","endLine":29,"endColumn":10},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]